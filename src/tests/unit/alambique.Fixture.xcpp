// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-alambique/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/alambique/tree/LICENSE
#divert <fpp>
#import tunitas.alambique
namespace tests::unit::alambique {
  namespace [[eponymous]] fixture {
    class Fixture;
    namespace library = ::tunitas::alambique;
  }
  using fixture::Fixture;
}
#endiv
#divert <hpp>
#import tunitas.alambique.Demonstrator // and library::Function
struct tests::unit::alambique::fixture::Fixture : public rigging::suite::Fixture {
  static auto suite() -> Suite;
  //
  template<library::Function> auto test_usage_Demonstrator() -> void;
};
#endiv
#divert <tpp>
#import tunitas.keyston.entropy.Source
namespace tests::unit::alambique::fixture {
  template<library::Function FUNCTION> auto Fixture::test_usage_Demonstrator() -> void {
    using Entropy = tunitas::keyston::entropy::Source;
    using Subject = library::Demonstrator<FUNCTION>;
    auto source = Entropy{};
    auto subject = Subject{source, {}};
    require(ASSERTION, sizeof(subject));
  }
}
#endiv
#divert <cpp>
auto tests::unit::alambique::fixture::Fixture::suite() -> Suite {
  auto series = Stream{"alambique"sv};
  series << []{
            auto use = Stream{"usage"sv};
            use << []{
                    auto dem = Stream{"Demonstrator"sv};
                    dem << add("DAF", &Fixture::test_usage_Demonstrator<library::Function::DAF>)
                        << add("VDAF", &Fixture::test_usage_Demonstrator<library::Function::VDAF>)
                        << END;
                    return dem;
                  }()
                << END;
            return use;
          }()
         << END;
  return settle(series);
}
#endiv
