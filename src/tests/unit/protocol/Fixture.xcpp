// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tests::unit::protocol { class Fixture; }
#endiv
#divert <hpp>
struct tests::unit::protocol::Fixture : public cppunit::test::Fixture {
  static auto suite() -> cppunit::Test *;
  //
  auto test_usage_something() -> void;
};
#endiv
#divert <cpp>
auto tests::unit::protocol::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"protocol"};
  series << []{
              auto use = Stream{"usage"};
              use << add("something", &Fixture::test_usage_something)
                  << END;
              return use;
            }()
         << END;
  return finalize(series);
}
namespace tests::unit::protocol {
  auto Fixture::test_usage_something() -> void {
    require(ASSERTION);
  }
}
#endiv
