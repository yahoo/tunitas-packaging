// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tests.unit.service.partial.required.Supervisable
#import tests.unit.service.partial.Supervisor
#include <hpp/tests.unit.service.partial.Supervisor>
#import nonstd.required.InstanceOf
#import tunitas.denniston.scheduler.required.World
namespace tests::unit::service::partial::required {
  //
  // Is this operable?  Is it suitable as a world?
  //
  template<typename SUPERVISOR> concept Operable = requires(SUPERVISOR) {
    // a relatively weak condition
    requires ::tunitas::denniston::scheduler::required::World<SUPERVISOR>;
    // stronger conditions
    requires nonstd::required::InstanceOf<SUPERVISOR, partial::Supervisor>;
    typename SUPERVISOR::Subject;
    requires Supervisable<typename SUPERVISOR::Subject>;
  };
}
#endiv
