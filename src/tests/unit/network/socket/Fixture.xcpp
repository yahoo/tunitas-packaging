// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
namespace tests::unit::network::socket { class Fixture; }
#endiv
#divert <hpp>
#import std.vector
#import tunitas.denniston.network.Socket
#import tunitas.denniston.process.Ready
struct tests::unit::network::socket::Fixture : public rigging::suite::Fixture {
  static auto suite() -> Suite;
  //
  using Subject = library::Socket;
  //
  auto test_constructor_default() -> void;
};
#endiv
#divert <cpp>
#import tests.unit.network.socket.Interface
auto tests::unit::network::socket::Fixture::suite() -> Suite {
  auto series = Stream{"Socket"sv};
  series << []{
              auto con = Stream{"constructor"sv};
              con << add("default", &Fixture::test_constructor_default)
                  << END;
              return con;
            }()
         << add<Interface>()
         << END;
  return settle(series);
}
namespace tests::unit::network::socket {
  auto Fixture::test_constructor_default() -> void {
    auto subject = Subject{};
    require(ASSERTION, sizeof (subject));
  }
}
#endiv
