// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.id
namespace tests::unit::id {
  class Fixture;
  namespace library = ::tunitas::keyston::id;
}
#endiv
#divert <hpp>
struct tests::unit::id::Fixture : public rigging::suite::Fixture {
  static auto suite() -> Suite;
  //
  auto test_Service() -> void;
};
#endiv
#divert <cpp>
#import tests.unit.id.generator.Fixture
auto tests::unit::id::Fixture::suite() -> Suite {
  auto series = Stream{"id"sv};
  series << add("Service", &Fixture::test_Service)
         << add<generator::Fixture>()
         << END;
  return settle(series);
}
#import tunitas.keyston.id.Service
namespace tests::unit::id { 
  auto Fixture::test_Service() -> void {
    using Subject = library::Service;
    auto subject = Subject{};
    require(ASSERTION, sizeof (subject));
  }
}
#endiv
