// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tests::unit::vdaf {
  namespace [[eponymous]] configuration {
    template<typename SUBJECT> class Configuration;
  }
  using configuration::Configuration;
}
#endiv
#divert <hpp>
#import tunitas.keyston.vdaf.Configuration
namespace tests::unit::vdaf{
  template<typename SUBJECT> struct configuration::Configuration : public rigging::suite::Fixture {
    static auto suite() -> Suite;
    //
    using Subject = SUBJECT;
  };
}
#endiv
#divert <tpp>
namespace tests::unit::vdaf::configuration {
  template<typename _> auto Configuration<_>::suite() -> Suite {
    auto series = Stream{typeid(Subject)};
    series // there is nothing to test in the dynamic sense
           << END;
    return settle(series);
  }
}
#endiv
