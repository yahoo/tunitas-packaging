!// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tests::unit::vdaf::numeric::prio3 { class Fixture; }
#endiv
#divert <hpp>
#import tunitas.keyston.vdaf.Configuration
#import tunitas.keyston.vdaf.Name
struct tests::unit::vdaf::numeric::prio3::Fixture : public rigging::suite::Fixture {
  static auto suite() -> Suite;
  //
  using Configuration = ::tunitas::keyston::vdaf::Configuration<Scheme::NUMERIC>;
  //
  auto test_disassembly() -> void;
  auto test_initialization() -> void;
  auto test_continuation() -> void;
  auto test_amalgamation() -> void;
  auto test_disgorgement() -> void;
  auto test_reassembly() -> void;
};
#endiv
#divert <cpp>
auto tests::unit::vdaf::numeric::prio3::Fixture::suite() -> Suite {
  auto series = Stream{"prio3"sv};
  series << add("disassembly", &Fixture::test_disassembly)
         << add("initialization", &Fixture::test_initialization)
         << add("continuation", &Fixture::test_continuation)
         << add("amalgamation", &Fixture::test_amalgamation)
         << add("disgorgement", &Fixture::test_disgorgement)
         << add("reassembly", &Fixture::test_reassembly)
         << END;
  return settle(series);
}
namespace tests::unit::vdaf::numeric::prio3 {
  auto Fixture::test_disassembly() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
  auto Fixture::test_initialization() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
  auto Fixture::test_continuation() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
  auto Fixture::test_amalgamation() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
  auto Fixture::test_disgorgement() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
  auto Fixture::test_reassembly() -> void {
#warning WRITETHIS 
    require(ASSERTION);
  }
}
#endiv
