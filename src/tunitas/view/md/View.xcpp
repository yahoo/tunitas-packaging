// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.span.md.Span
#import tunitas.span.md.required.Extents
namespace tunitas::view::md {
  //
  // A multi-dimensional (variable or fixed) span which is constie
  //
  // Usage:
  //
  //   auto mutablish = md::Span<int, std::extents<std::size_t, 3, 3, 3>>{...somehow...};
  //   auto constiesh = md::View<int, std::extents<std::size_t, 3, 3, 3>>{...somehow...};
  //
  // see the constie 'TYPE const' ------------------------------------------------------------------------------------------------------------++++++++++-------------------------------\\\\\\\\\\ (here)
  //                                                                                                                                          ||||||||||                               ||||||||||
  //                                                                                                                                          vvvvvvvvvv                               vvvvvvvvvv
  template<typename TYPE, span::md::required::Extents EXTENTS, typename LAYOUT = std::layout_right, typename ACCESSOR = std::default_accessor<TYPE const>> using View = span::md::Span<TYPE const, EXTENTS, LAYOUT, ACCESSOR>;
}
#endiv
