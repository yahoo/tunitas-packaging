// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.entropy.is.Entropy
#include <hpp/tunitas.entropy.is.Entropy>
namespace tunitas::entropy::required {
  //
  // Is this type an entropy source?
  //
  // This MUST be diagnosable without the complete type of ENTROPY
  // See also usage::Entropy<...>
  //
  // Usage:
  //
  //   #import tunitas.entropy.required.Entropy
  //   
  //   template<required::Entropy> struct Something;
  //
  template<typename ENTROPY> concept Entropy = is::Entropy<ENTROPY>::value;
}
#endiv
#divert <cpp>
#import tunitas.entropy.Source
#import tunitas.entropy.Sequence
#import tunitas.entropy.Serial
#import tunitas.entropy.None
namespace {
  namespace testate {
    namespace required = tunitas::entropy::required;
    using namespace tunitas::entropy;
    static_assert(required::Entropy<Source>);
    static_assert(required::Entropy<Sequence>);
    static_assert(required::Entropy<Serial>);
    static_assert(required::Entropy<None>);
  }
}
#endiv
