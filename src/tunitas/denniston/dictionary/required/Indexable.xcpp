// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import nonstd.required.Enumeration
#import std.underlying_type
#import std.is_unsigned
namespace tunitas::denniston::dictionary::required {
  //
  // Is this type an index?
  // Aligns with the indices in tunitas::denniston::index, without enumerating them each by name.
  //
  template<typename INDEX> concept Indexable = requires(INDEX) {
    requires required::Enumeration<INDEX>;
    requires std::is_unsigned_v<std::underlying_type_t<INDEX>>;
  };
}
#endiv
