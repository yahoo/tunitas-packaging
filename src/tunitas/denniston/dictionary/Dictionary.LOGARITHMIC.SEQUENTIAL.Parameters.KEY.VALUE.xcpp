// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tunitas.denniston.dictionary.Dictionary.template
namespace tunitas::denniston::dictionary {
  template<required::Keyable KEY, required::Valuable VALUE> struct Dictionary<LOGARITHMIC, SEQUENTIAL, Parameters<KEY, VALUE>>;
}
#endiv
#divert <hpp>
#import tunitas.denniston.dictionary.logarithmic.Sequential
#import tunitas.denniston.dictionary.Variables.Guard.Free
namespace tunitas::denniston::dictionary {
  template<required::Keyable KEY, required::Valuable VALUE> class Dictionary<LOGARITHMIC, SEQUENTIAL, Parameters<KEY, VALUE>> : public logarithmic::Sequential<KEY, VALUE> {
    using Ancestor = logarithmic::Sequential<KEY, VALUE>;
  protected:
    using Guard = Variables::Guard::Free;
    template<required::Origin, required::Iterable> friend struct dictionary::Range;
  public:
    inline static constexpr auto const COMPLEXITY = LOGARITHMIC;
    inline static constexpr auto const CONCURRENCY = SEQUENTIAL;
    Dictionary() = default;
    using Ancestor::Sequential;
  };
}
#endiv
