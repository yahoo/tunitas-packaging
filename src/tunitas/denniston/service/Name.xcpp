// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tunitas.denniston
namespace tunitas::denniston::service {
  //
  // The "name" of a service.
  //
  // Specification:
  //
  //   One day this will have to be a DNS name.
  //
  // Design:
  //
  //   For now, an enum (class).
  //   There aren't a lot of services in the protocol.
  //
  // Usage:
  //
  //   You need a tutorial on the usage of an enum (class)?
  //
  enum class Name {
    COLLECTOR = -1,
    GATEWAY = 0,
    PROCESSOR1 = 1,
    PROCESSOR2,
  };
}
#endiv
#divert <hpp>
namespace tunitas::denniston::service {
  inline constexpr auto underlying(Name n) { return std::underlying_type_t<Name>(n); }
  inline auto swap(Name &a, Name &b) noexcept -> void { return std::swap(a, b); }
}
#endiv
