// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
namespace tunitas::denniston::service::instance {
  //
  // A manifestation of the gateway in the network.
  //
  // Specification:
  //
  //   A router; suffles octets.
  //
  // Design:
  //
  //   Something something: a thread.
  //
  // Usage:
  //
  //   In the environment..
  //
  struct Gateway;
}
#endiv
#divert <hpp>
#import tunitas.denniston.service.instance.Prototype
class tunitas::denniston::service::instance::Gateway : public Prototype {
  using Ancestor = Prototype;
  auto run() noexcept -> void;
public:
  inline explicit Gateway();
  auto launch(driver::Threads &) -> void override;
};
#endiv
#divert <ipp>
namespace tunitas::denniston::service::instance {
  Gateway::Gateway()
    : Ancestor{Name::GATEWAY}
  { }
}
#endiv
#divert <cpp>
namespace tunitas::denniston::service::instance {
  auto Gateway::launch(driver::Threads &pool) -> void { pool.launch(&Gateway::run, this); }
  auto Gateway::run() noexcept -> void try {
    log.format("begin");
    while (true) {
      log.format("reading");
      auto red = control.read();
      log.format("red");
      if (is_quit(red)) {
        break;
      }
    }
    log.format("ending gracefully");
  } catch(...) {
    log.format("escaped expression is suppressed");
  }
}
#endiv
