// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tunitas.denniston.report.required.Valuable
namespace tunitas::denniston::report {
  //
  // An ordered series of reports.
  //
  // Specification:
  //
  //   Arbitrary order .....-needed.
  //   Contiguous layout ... not needed.
  //
  // Design:
  //
  //   Make its own type so that ADL will work.
  //
  // Usage:
  //
  //   See at least service::gateway::subprocess::Job
  //
  template<required::Valuable> struct Series;
}
#import nonstd.container.Traits.tunitas.denniston.report.Series.VALUE
#endiv
#divert <hpp>
#import tunitas.denniston.report.usage.Valuable
#import std.deque
namespace tunitas::denniston {
  template<report::required::Valuable VALUE> struct report::Series : public std::deque<VALUE> {
    using Ancestor = std::deque<VALUE>;
    static_assert(usage::Valuable<VALUE>);
  public:
    using Value [[school("New")]] = typename Ancestor::value_type;
    Series() = default;
    using Ancestor::deque;
  };
}
#endiv
