// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.protocol.id // for id::Report
#forward tunitas.denniston.report.Definition
#forward tunitas.denniston.report.Status
namespace tunitas::denniston::report::required {
  //
  // Is this type a VALUE for the contaniers?  report::Dictionary<VALUE> or report::Series<VALUE>
  // This MUST be diagnosable without the complete type of VALUE
  // So, crudely, we enumeration the allowed types by name.
  //
  template<typename VALUE> concept Valuable = (same_as<VALUE, keyston::protocol::id::Report> ||
                                               same_as<VALUE, report::Definition> ||
                                               same_as<VALUE, report::Status>);
}
#endiv
