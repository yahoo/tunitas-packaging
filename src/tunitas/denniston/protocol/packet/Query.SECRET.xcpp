// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import tunitas.denniston.protocol.packet.Query.template
namespace tunitas::denniston::protocol::packet {
  //
  // Semantic:
  //
  //   The Processor is asking the Directory (service) for the secret HPKE configuation of the service id (endpoint).
  //
  //   This isn't represented in the standard (draft) explicitly other than to indicate that the SECRET
  //   is to distributed to the {aggregator,processor} in some manner that is unspecified in the DAP protocol. 
  //
  //.  <quote ref="https://ietf-wg-ppm.github.io/draft-ietf-ppm-dap/draft-ietf-ppm-dap.html"
  //         section="Section 4.1. Task Configuration">
  //     vdaf_verify_key: The VDAF verification key shared by the aggregators.
  //     This key is used in the aggregation sub-protocol (Section 4.4).
  //     [OPEN ISSUE: The manner in which this key is distributed may be relevant to the VDAF's security. See issue#161.]
  //   </quote>
  //   <quote section="Section 4.4.1.5. Input Share Preparation">
  //     vdaf_verify_key is the VDAF verification key shared by the aggregators;
  //     <snip/>
  //   </quote>
  //
  // Design:
  //
  //   No.
  //
  // Response:
  //
  //   Success returns a Response<SECRET>
  //   Failure returns a Status
  //
  template<> struct Query<Get::SECRET>;
}
#endiv
#divert <hpp>
#import tunitas.denniston.protocol.packet._.hpke.Query
namespace tunitas::denniston::protocol::packet {
  template<> struct Query<Get::SECRET> : public _::hpke::Query {
    using Ancestor = _::hpke::Query;
  public:
    inline static constexpr auto const SIDE = keyston::hpke::Side::SECRET;
    Query() = default;
    using Ancestor::Query;
  };
}
#endiv
