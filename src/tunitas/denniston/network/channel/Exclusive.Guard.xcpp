// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
//
// A guard for the exclusive lock RAII around the the channel Variables
// 
// Usage: see Channel
//
//   Exclusive::Guard ex{conditions};
//   ...do exclusive stuff...
//
#import tunitas.denniston.network.channel.Exclusive
#endiv
#divert <hpp>
#import tunitas.denniston.network.channel.Variables
#import std.lock_guard
class tunitas::denniston::network::channel::Exclusive::Guard : public std::unique_lock<Variables::Mutex> {
  using Ancestor = std::unique_lock<Variables::Mutex>;
public:
  inline explicit Guard(Variables &variables) : Ancestor{variables.mutex} { }
};
#endiv
