// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
namespace tunitas::denniston::network::channel {
  //
  // The condition (variables) of the channel.
  // These are all the thread synchronization primitives all in one place.
  // Depending, the Predicate will switch between the two Condition variables.
  // 
  // Usage: see Channel
  //
  struct Variables;
}
#endiv
#divert <hpp>
#import std.mutex
#import std.lock_guard
#import std.unique_lock
#import std.condition_variable
struct tunitas::denniston::network::channel::Variables {
  // std::mutex is neither copyable nor movable. 
  using Mutex = std::mutex;
  using Guard = std::lock_guard<Mutex>;
  using Condition = std::condition_variable;
  Mutex mutex;
  Condition nonempty;
  Condition nonfull;
};
#endiv
