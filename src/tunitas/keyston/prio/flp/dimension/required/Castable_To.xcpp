// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.prio.flp.dimension.required.Quantity
#import tunitas.keyston.prio.flp.dimension.required.Dimension
#import tunitas.keyston.prio.flp.dimension.is.Castable_To
#include <hpp/tunitas.keyston.prio.flp.dimension.is.Castable_To>
namespace tunitas::keyston::prio::flp::dimension::required {
  //
  // Is this dimension type castable to that other dimension type?
  // The argument order rhymes with convertible_to<SOURCE, TARGET>
  //
  template<typename SOURCE, typename TARGET> concept Castable_To = requires(SOURCE, TARGET) {
    requires Dimension<SOURCE>;
    requires Quantity<TARGET>;
    requires is::Castable_To<SOURCE, TARGET>::value;
  };
}
#endiv
