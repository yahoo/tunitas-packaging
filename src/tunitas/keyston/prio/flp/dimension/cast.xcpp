// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <hpp>
#import tunitas.keyston.prio.flp.dimension.required.Castable_To
#import tunitas.keyston.prio.flp.dimension.required.Dimension
namespace tunitas::keyston::prio::flp::dimension {
  //
  // cast a dimensional value to bytes
  //
  template<required::Quantity TARGET, required::Dimension SOURCE> inline constexpr auto cast(SOURCE) -> TARGET requires required::Castable_To<SOURCE, TARGET>;
}
#endiv
#divert <ipp>
#import std.underlying_type
namespace tunitas::keyston::prio::flp {
  template<dimension::required::Quantity TARGET, dimension::required::Dimension SOURCE> constexpr auto dimension::cast(SOURCE source) -> TARGET requires required::Castable_To<SOURCE, TARGET> { return TARGET{std::underlying_type_t<SOURCE>(source)}; }
}
#endiv
