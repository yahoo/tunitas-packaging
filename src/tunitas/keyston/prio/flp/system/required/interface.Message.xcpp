// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.prio.flp.system.interface.Message
namespace tunitas::keyston::prio::flp::system::required::interface {
  //
  // Is this type a Message (precursor)
  // This is the moral equivalent of InstanceOf which accounts for the NTTP (Non-Type Template Parameters)
  //
  template<typename MESSAGE> concept Message = requires(MESSAGE) {
    { []<Input INPUT, Output OUTPUT, Proof PROOF, Verifier VERIFIER>(system::interface::Message<INPUT, OUTPUT, PROOF, VERIFIER> *)
      {}(static_cast<MESSAGE *>(nullptr)) };
  };
}
#endiv
