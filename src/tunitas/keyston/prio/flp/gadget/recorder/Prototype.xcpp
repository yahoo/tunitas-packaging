// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.prio.flp.gadget.recorder.required.Element
namespace tunitas::keyston::prio::flp::gadget::recorder {
  //
  // The commonalities among the recorders.
  //
  template<required::Element ELEMENT, Arity ARITY> struct Prototype;
}
#endiv
#divert <hpp>
#import tunitas.keyston.prio.flp.gadget.recorder.Sink
namespace tunitas::keyston::prio::flp::gadget {
  template<recorder::required::Element ELEMENT, Arity THE_ARITY> struct recorder::Prototype {
    using Element = ELEMENT;
    inline static constexpr auto const ARITY = THE_ARITY;
    using Sink = recorder::Sink<Element, ARITY>;
  protected:
    constexpr explicit Prototype() = default;
    constexpr explicit Prototype(Sink s) : sink{s} { }
    Sink sink{};
  };
}
#endiv
