// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.vdaf.generic.continued.alternatives
// NOT YET ---> #import nonstd.required.InstanceOf <--- NOT YET
namespace tunitas::keyston::vdaf::generic::continued::required {
  //
  // Is it continuable? (will it blend?)
  // As applicable, the caller must trip off the cvreference-cvpointer qualifiers.
  //
  namespace [[eponymous]] queryable {
    // replace InstanceOf with nonstd::InstanceOf when nonstd-2.2 has it
    template<typename SPECIMEN, template<typename...> class TEMPLATE> concept InstanceOf = requires(SPECIMEN) {
      { // \exists a set of parameters such that TEMPLATE matches SPECIMEN
        []<typename... TYPES>(TEMPLATE<TYPES...> *) {} (static_cast<SPECIMEN *>(nullptr)) };
    };
    template<typename QUERY> concept Queryable = InstanceOf<QUERY, Again> || InstanceOf<QUERY, Final>;
  }
  using queryable::Queryable;
}
#endiv
