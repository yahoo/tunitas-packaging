// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <hpp>
#import nonstd.required.Class
#import tunitas.keyston.vdaf.generic.configuration.required.Core
namespace tunitas::keyston::vdaf::generic::configuration::usage {
  //
  // Is this CORE sufficient?
  // Requires the complete type of CORE
  //
  template<typename CORE> concept Core = required::Core<CORE> && requires(CORE) {
    typename CORE::Parameters;
    typename CORE::Nonce;
    typename CORE::Verify_Key;
    //
    requires required::Class<typename CORE::template Seed<WHOLE>>;
    requires required::Class<typename CORE::template Seed<SHARE>>;
    //
    requires required::Class<typename CORE::template Input<WHOLE>>;
    requires required::Class<typename CORE::template Input<SHARE>>;
    //
    requires required::Class<typename CORE::template Preparation<WHOLE>>;
    requires required::Class<typename CORE::template Preparation<SHARE>>;
    //
    // NO SUCH ---> requires required::Class<typename CORE::template Output<WHOLE>>; < --- NO SUCH (so frequenlty it is undefined)
    requires required::Class<typename CORE::template Output<SHARE>>;
    //
    requires required::Class<typename CORE::template Aggregation<WHOLE>>;
    requires required::Class<typename CORE::template Aggregation<SHARE>>;
  };
}
#endiv
