// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.vdaf.function.Function.template
#import tunitas.keyston.vdaf.Name
namespace tunitas::keyston::vdaf::function {
  //
  // The Verifiable Distributed Aggregation Function - CONSTANT (sic)
  //
  // Specification:
  //
  //   Pass-thru a constant value.
  //
  // Design:
  //
  //   It's not in the standard.
  //   This is used for "cleaning the pipes" and proving that end-to-end this multi-cast variant record technique works (well enough).
  //
  // Usage:
  //
  //   Within Stages<NAME> and Executor<NAME>
  //
  template<> struct Function<ADHOC, Name::CONSTANT>;
}
#endiv
#divert <hpp>
#import tunitas.keyston.vdaf.function.Prototype
namespace tunitas::keyston::vdaf::function {
  template<> struct Function<ADHOC, Name::CONSTANT> : public Prototype {
  };
}
#endiv
#divert <cpp>
#warning FIXTHIS WRITETHIS - move the tunitas::keyston::vdaf;:constant functions into Function<ADHOC, CONSTANT>
#endiv
