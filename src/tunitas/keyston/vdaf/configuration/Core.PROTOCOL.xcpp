// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.vdaf.configuration.Core.template
namespace tunitas::keyston::vdaf::configuration {
  template<> struct Core<PROTOCOL>;
}
#endiv
#divert <hpp>
#import tunitas.keyston.Opaque
#import tunitas.keyston.quantity.Records
#import tunitas.keyston.vdaf.constants
#import tunitas.keyston.vdaf.protocol.Parameters
#import tunitas.keyston.vdaf.protocol.Measurement
#import tunitas.keyston.vdaf.protocol.Public
#import tunitas.keyston.vdaf.protocol.Input
#import tunitas.keyston.vdaf.protocol.Preparation
#import tunitas.keyston.vdaf.protocol.Output
#import tunitas.keyston.vdaf.protocol.Aggregation
#import tunitas.keyston.nonce.Bits
#import tunitas.keyston.octets.View
#import tunitas.keyston.hpke.Key
namespace tunitas::keyston::vdaf::configuration {
  //
  // [[FIXTHIS]] this is exactly the same as Core<NUMERIC>
  template<> struct Core<PROTOCOL> {
    using Parameters = protocol::Parameters;
    using Randomness = octets::View;
    using Nonce =  octets::View;
    using Verify_Key = hpke::Key<hpke::Side::SECRET>; // else Opaque<(1uz<<24)>;
    using Processed = quantity::Records;
    template<Slice SLICE> using Measurement = protocol::Measurement<SLICE>;
    template<Slice SLICE> using Public = protocol::Public<SLICE>;
    template<Slice SLICE> using Input = protocol::Input<SLICE>;
    template<Slice SLICE> using Preparation = protocol::Preparation<SLICE>;
    template<Slice SLICE> using Output = protocol::Output<SLICE>;
    template<Slice SLICE> using Aggregation = protocol::Aggregation<SLICE>;
  };
}
#endiv
#divert <cpp>
#import tunitas.keyston.vdaf.generic.configuration.usage.Core
namespace {
  namespace testate {
    using enum tunitas::keyston::Transport;
    namespace usage = tunitas::keyston::vdaf::generic::configuration::usage;
    using namespace tunitas::keyston::vdaf::configuration;
    static_assert(usage::Core<Core<PROTOCOL>>);
  }
}
#endiv
