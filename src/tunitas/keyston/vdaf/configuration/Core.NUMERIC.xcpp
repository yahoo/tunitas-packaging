// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.vdaf.configuration.Core.template
namespace tunitas::keyston::vdaf::configuration {
  template<> struct Core<NUMERIC>;
}
#endiv
#divert <hpp>
#import tunitas.keyston.Opaque
#import tunitas.keyston.measurement.Records
#import tunitas.keyston.vdaf.constants
#import tunitas.keyston.vdaf.numeric.Parameters
#import tunitas.keyston.vdaf.numeric.Measurement
#import tunitas.keyston.vdaf.numeric.Public
#import tunitas.keyston.vdaf.numeric.Input
#import tunitas.keyston.vdaf.numeric.Preparation
#import tunitas.keyston.vdaf.numeric.Output
#import tunitas.keyston.vdaf.numeric.Aggregation
#import tunitas.keyston.nonce.Bits
#import tunitas.keyston.hpke.Key
namespace tunitas::keyston::vdaf::configuration {
  template<> struct Core<NUMERIC> {
    using Parameters = vdaf::numeric::Parameters;
    using Randomness = nonce::Bits<constants::RANDOMNESS_BIT_COUNT.count()>;
    using Nonce =  nonce::Bits<constants::NONCE_BIT_COUNT.count()>; // else Opaque<NONCE_BYTE_COUNT.count()>;
    using Verify_Key = hpke::Key<hpke::Side::SECRET>; // [[FIXTHIS]] use a view since the size need not be known here.
    using Processed = measurement::Records;
    template<Slice SLICE> using Measurement = vdaf::numeric::Measurement<SLICE>;
    template<Slice SLICE> using Public = vdaf::numeric::Public<SLICE>;
    template<Slice SLICE> using Input = vdaf::numeric::Input<SLICE>;
    template<Slice SLICE> using Preparation = vdaf::numeric::Preparation<SLICE>;
    template<Slice SLICE> using Output = vdaf::numeric::Output<SLICE>;
    template<Slice SLICE> using Aggregation = vdaf::numeric::Aggregation<SLICE>;
  };
}
#endiv
#divert <cpp>
#import tunitas.keyston.vdaf.generic.configuration.usage.Core
namespace {
  namespace testate {
    using enum tunitas::keyston::Transport;
    namespace usage = tunitas::keyston::vdaf::generic::configuration::usage;
    using namespace tunitas::keyston::vdaf::configuration;
    static_assert(usage::Core<Core<NUMERIC>>);
  }
}
#endiv
