// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.aggregation.Limits.template
#import tunitas.keyston.aggregation.Summation
namespace tunitas::keyston::aggregation {
  template<> struct Limits<Summation>;
}
#endiv
#divert <hpp>
namespace tunitas::keyston::aggregation {
  template<> struct Limits<Summation> {
    using Value = aggregation::Summation;
    using Numeric = aggregation::Summation::Representation;
    inline static constexpr auto min() -> Numeric;
    inline static constexpr auto max() -> Numeric;
  protected:
    using Sublimits = std::numeric_limits<aggregation::Summation::Representation>;
  };
}
#endiv
#divert <ipp>
namespace tunitas::keyston::aggregation {
  constexpr auto Limits<Summation>::min() -> Numeric { return Sublimits::min(); }
  constexpr auto Limits<Summation>::max() -> Numeric { return Sublimits::max(); }
}
#endiv
