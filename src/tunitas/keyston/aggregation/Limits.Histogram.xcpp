// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.aggregation.Limits.template
#forward tunitas.keyston.aggregation.Histogram
namespace tunitas::keyston::aggregation {
  template<> struct Limits<Histogram>;
}
#endiv
#divert <hpp>
#import tunitas.keyston.aggregation.Limits.Count
#import tunitas.keyston.measurement.Limits.Boundaries
#import std.size_t
namespace tunitas::keyston::aggregation {
  template<> struct Limits<Histogram> {
    using Value = aggregation::Histogram;
    struct Element : public Limits<Count> { };
    struct Index {
      using Value = std::size_t;
      inline static constexpr auto min() -> Value;
      inline static constexpr auto max() -> Value;
    };
    using Boundaries = measurement::Limits<measurement::Boundaries>;
  };
}
#endiv
#divert <ipp>
#import tunitas.keyston.histogram.Histogram
namespace tunitas::keyston::aggregation {
  constexpr auto Limits<Histogram>::Index::min() -> Value { return 0uz; }
  constexpr auto Limits<Histogram>::Index::max() -> Value { return Limits::Value{}.capacity(); }
}
#endiv
