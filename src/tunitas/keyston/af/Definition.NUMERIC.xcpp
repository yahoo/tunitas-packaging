// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <hpp>
#import tunitas.keyston.af.Definition.template
#import tunitas.keyston.af.Configuration // which is only NUMERIC; a.k.a. Configuration<NUMERIC> in daf, vdaf, vidaf
namespace tunitas::keyston::af::definition {
  template<> Definition<Configuration<NUMERIC>>::Definition(Name);
}
#endiv
#divert <cpp>
#import tunitas.keyston.af.exception.Invalid
#import tunitas.keyston.af.numeric.zero
#import tunitas.keyston.af.numeric.zero
#import tunitas.keyston.af.numeric.constant
#import tunitas.keyston.af.numeric.count
#import tunitas.keyston.af.numeric.sum
#import tunitas.keyston.af.numeric.histogram
#import tunitas.keyston.af.numeric.popularity
namespace tunitas::keyston::af::definition {
  template<> Definition<Configuration<NUMERIC>>::Definition(Name name) {
    switch (name) {
      using namespace af::numeric;
    case Constant<DAF::ZERO>:
      initialization = zero::initialization;
      computation = zero::computation;
      finalization = zero::finalization;
      break;
    case Constant<DAF::CONSTANT>:
      initialization = constant::initialization;
      computation = constant::computation;
      finalization = constant::finalization;
      break;
    case Constant<DAF::COUNT>:
      initialization = count::initialization;
      computation = count::computation;
      finalization = count::finalization;
      break;
    case Constant<DAF::SUM>:
      initialization = sum::initialization;
      computation = sum::computation;
      finalization = sum::finalization;
      break;
    case Constant<DAF::HISTOGRAM>:
      initialization = histogram::initialization;
      computation = histogram::computation;
      finalization = histogram::finalization;
      break;
    case Constant<DAF::POPULARITY>:
      initialization = popularity::initialization;
      computation = popularity::computation;
      finalization = popularity::finalization;
      break;
    default:
      throw exception::Invalid{"af name"};
    }
  }
}
#endiv
