// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.array.Fixed
#import tunitas.keyston.Opaque
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
namespace tunitas::keyston::function {
  //
  // Specification:
  //
  //   https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-03.html
  //   Verifiable Distributed Aggregation Functions
  //
  //   All the ancillary types.
  //   Using the nomenclature of this standards draft
  //
  // Design:
  //
  //   No.  Mostly type aliases.
  //
  // Usage:
  //
  //   Yes.
  //
  using Byte [[deprecated("AVOID; these are a euphemism for a more specific data type; use that data type instead")]] = Octet;
  using Bytes [[deprecated("AVOID; these are a euphemism for a more specific data type; use that data type instead")]] = Opaque<(1uz<<32)>;
  //
  enum class Processor : unsigned;
  inline static constexpr auto const PROCESSOR_COUNT = 2uz;
  template<typename TYPE> using Vector = array::Fixed<TYPE, PROCESSOR_COUNT>;
  using Nonce = Opaque<32>;
  namespace verify {
    using Key = Bytes;
  };
}
#pragma GCC diagnostic pop
#endiv
