// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.field.Field.template
namespace tunitas::keyston::field {
  //
  // See https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-05.html#name-parameters-2
  // Section 6.1.3 Parameters
  //
  // Derivation:
  //
  //   2^255 - 19
  //   57896044618658097711785492504343953926634992332820282019728792003956564819949
  //
  //   obase=16
  //   7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFED
  //
  template<> struct Field<255>;
}
#endiv
#divert <hpp>
namespace tunitas::keyston::field {
  template<> struct Field<255> {
    using Element = field::Element<255>;
    using Value = Element;
    using Underlying = traits::Element<Element>::Underlying;
    using Temporary = traits::Element<Element>::Temporary;
    template<Size CAPACITY> using Vector = field::Vector<Value, CAPACITY>;
    inline static constexpr Underlying const MODULUS = (Underlying{1} << 255) - 19;
    inline static constexpr auto const ENCODED_SIZE = Bytes{32u};
  };
}
#endiv
