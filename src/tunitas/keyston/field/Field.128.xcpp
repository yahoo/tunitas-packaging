// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.field.Field.template
namespace tunitas::keyston::field {
  //
  // See https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-05.html#name-parameters-2
  // Section 6.1.3 Parameters
  //
  template<> struct Field<128>;
}
#endiv
#divert <hpp>
namespace tunitas::keyston::field {
  template<> struct Field<128> {
    using Value = uint128_t;
    template<Size CAPACITY> using Vector = field::Vector<Value, CAPACITY>;
    inline static constexpr Value const MODULUS = (Value{1} << 66) * 4611686018427387897 + 1;
    inline static constexpr auto const ENCODED_SIZE = Bytes{16u};
    using Generator = field::Generator<7lu, 4611686018427387897llu, MODULUS>;
    static auto gen() -> Value { return Generator{}(); }
    inline static constexpr auto GEN_ORDER = Value{1} << 66;
  };
}
#endiv
