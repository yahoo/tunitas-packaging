// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.field.Vector
#import tunitas.keyston.field.required.Element
namespace tunitas::keyston::field::required {
  //
  // Is this type (a descendant of) a Vector<?
  //
  // Design:
  //
  //   Whereas there is an NTTP (Non-Type Template Parameter), the usual nonstd::required::InstanceOf will not work.
  //
  // Usage:
  //
  //   Yes.
  //
  template<typename VECTOR> concept Vector = requires(VECTOR) {
    typename VECTOR::Value;
    requires Element<typename VECTOR::Value>;
    { []<typename ELEMENT, Size CAPACITY>(field::Vector<ELEMENT, CAPACITY> *) requires Element<ELEMENT>
      {} (static_cast<VECTOR *>(nullptr)) };
  };
}
#endiv
