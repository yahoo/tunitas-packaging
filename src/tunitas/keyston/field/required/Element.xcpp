// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.field.required.Subelement
#import tunitas.number.Integer
namespace tunitas::keyston::field::required {
  //
  // An element in the field is an (unsigned) "integer".
  // allowed: uint128_t when compiler-managed.
  // allowed: number::Integer when library-managed.
  //
  template<typename INTEGER> concept Element = (same_as<INTEGER, number::Integer> || integer::Unsigned<INTEGER>);
}
#endiv
#divert <cpp>
#import nonstd.integers.
#import tunitas.number.Integer
namespace {
  namespace testate {
    using namespace nonstd::integers;
    namespace required = tunitas::keyston::field::required;
    //
    static_assert(required::Element<tunitas::number::Integer>);
    //
    static_assert(required::Element<uint8_t>);
    static_assert(required::Element<uint16_t>);
    static_assert(required::Element<uint32_t>);
    static_assert(required::Element<uint64_t>);
    static_assert(required::Element<uint128_t>);
  }
}
#endiv
