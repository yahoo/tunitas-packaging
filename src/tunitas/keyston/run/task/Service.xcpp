// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tunitas::keyston::run::task {
  //
  // The specification of (one of the) service(s) of the task.
  //
  // Specification:
  //
  //   https://ietf-wg-ppm.github.io/draft-ietf-ppm-dap/draft-ietf-ppm-dap.html
  //   Section 2. System Architecture
  //
  // Design:
  //
  //   Using the Bets Available Means and Methods (UBAMM)
  //
  // Usage:
  //
  //   Use designated initialization.
  //   Construct one, and consider it.
  //
  struct Service;
}
#endiv
#divert <hpp>
#import tunitas.keyston.run.service.Name
#import tunitas.keyston.run.task.Provisions
namespace tunitas::keyston::run {
  namespace task {
    using std::move;
    inline auto swap(Service &, Service &) noexcept -> void;
  }
  struct task::Service {
    service::Name name{};
    Provisions provisions{};
  };
}
#endiv
#divert <ipp>
namespace tunitas::keyston::run {
  auto task::swap(Service &a, Service &b) noexcept -> void {
    swap(a.name, b.name);
    swap(a.provisions, b.provisions);
  }
}
#endiv
