// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tunitas::keyston::protocol::extension {
  //
  // The well-known number of an extension
  //
  // Specification:
  //
  //   https://ietf-wg-ppm.github.io/draft-ietf-ppm-dap/draft-ietf-ppm-dap.html
  //   Section 4.3.3. Upload Extensions
  //
  //   It's not really specified in there.
  //   The draft merely mentions the only extension extant as as TBD.
  //
  // Design:
  //
  //   Whatever man.
  //
  // Usage:
  //
  //   You need a tutorial on how to use an enum class? o.rly?
  //
  enum class Type : std::uint16_t {
    TBD,
  };
}
#endiv
#divert <hpp>
#import std.underlying_type
namespace tunitas::keyston::protocol::extension {
  inline constexpr auto underlying(Type c) { return std::underlying_type_t<Type>(c); }
  inline auto swap(Type &a, Type &b) noexcept -> void { std::swap(a, b); }
}
#endiv
