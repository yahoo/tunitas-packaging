// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.number.Integer
#import tunitas.keyston.measurement.Histogram
#import tunitas.keyston.measurement.Population
namespace tunitas::keyston::numeric::required {
  //
  // Is this type a (class) functor suitable for use with numeric::Treatment<FUNCTOR>?
  //
  namespace [[eponymous]] treatment {
    template<typename TREATMENT> concept Alternative_Is_Single = requires(TREATMENT treatment, number::Integer &lhs) {
      { treatment(lhs) };
    };
    template<typename TREATMENT> concept Alternative_Is_Histogram = requires(TREATMENT treatment, measurement::Histogram &lhs) {
      { treatment(lhs) };
    };
    template<typename TREATMENT> concept Alternative_Is_Population = requires(TREATMENT treatment, measurement::Population &lhs) {
      { treatment(lhs) };
    };
    template<typename TREATMENT> concept Treatment = requires(TREATMENT) {
      requires Class<TREATMENT>;
      requires Alternative_Is_Single<TREATMENT> || Alternative_Is_Histogram<TREATMENT> || Alternative_Is_Population<TREATMENT>;
    };
  }
  using treatment::Treatment;
}
#endiv
