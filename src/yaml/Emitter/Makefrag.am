# This is a -*- Makefile -*- fragment
# For terms and provenance see the LICENSE file at the top of this repository.
#
yaml_Emitter_SUBSOURCES = \
  obj/src/yaml/Emitter/tunitas.array.io.cpp \
  obj/src/yaml/Emitter/tunitas.keyston.field.io.cpp \
  obj/src/yaml/Emitter/tunitas.keyston.field.vector.io.cpp \
  obj/src/yaml/Emitter/tunitas.keyston.aggregation.io.cpp \
  obj/src/yaml/Emitter/tunitas.keyston.measurement.io.cpp \
  obj/src/yaml/Emitter/tunitas.octets.io.cpp \
  obj/src/yaml/Emitter/tunitas.view.io.cpp \
  obj/src/yaml/Emitter/nonstd.units.quantity.io.cpp \
  $(end)
#
$(yaml_Emitter_SUBSOURCES) : DISCOFLAGS+=--no-insert-namespace
#
# https://splichal.eu/gccsphinx-final/html/gcc/gcc-command-options/c++-modules.html
# circa 2023-08-08 gcc-c++-12.2.1-4.fc37.x86_64
#
# Allow work arounds for the continued ICE with -fmodules-ts (and maybe with -g too but apparently just generally)
# e.g. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104234
#
# 104234	gcc	c++	ppalka@gcc.gnu.org	ASSI	---	ICE with -fmodules-ts and std::map/_Rb_tree	2023-01-25
# 98735	gcc	c++	unassigned@gcc.gnu.org	NEW	---	ICE with -std=c++20 -fmodules-ts -fsanitize=undefined	2022-11-29
# 104956	gcc	c++	unassigned@gcc.gnu.org	UNCO	---	ICE with -fmodules-ts unordered_set and map	2022-03-21
# 105512	gcc	c++	unassigned@gcc.gnu.org	UNCO	---	compilation with -fmodules-ts and std=c++20 leads to segfault	2023-06-18
# 109419	gcc	c++	unassigned@gcc.gnu.org	UNCO	---	[modules] ICE: Segmentation fault when using -fmodules-ts and -g	2023-04-05
#
# in-project workaround in a .../Makefrag.am
#
#   $(some_files_SUBSOURCES) : CXXFLAGS_gcc_fmodules_ts= # override to turn off -fmodules-ts for these files
#
yaml_Emitter_SUBOBJECTS = $(patsubst obj/src/yaml/Emitter/%.cpp, obj/src/yaml/Emitter/noinst_lib_libyaml_tunitas_keyston_la-%.lo, $(yaml_Emitter_SUBSOURCES))
$(yaml_Emitter_SUBOBJECTS) : CXXFLAGS_gcc_fmodules_ts= # no -fmodules-ts else ICE
