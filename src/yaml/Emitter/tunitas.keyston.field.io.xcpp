// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <hpp>
#import yaml.Emitter
#forward tunitas.keyston.field.Element
#import tunitas.keyston.field.required.Element
namespace YAML {
  // follow https://github.com/jbeder/yaml-cpp/wiki/How-To-Emit-YAML STL Containers and Other Overloads
  template<tunitas::keyston::field::required::Element ELEMENT> inline auto operator<<(Emitter &, ELEMENT const &) -> Emitter &;
}
#endiv
#divert <ipp>
#import tunitas.keyston.field.vector.Fixed
#import yaml.Emitter.tunitas.keyston.field.io
#import tunitas.integer.to_octets
#import tunitas.octets.to_hexidecimal
template<tunitas::keyston::field::required::Element ELEMENT> auto YAML::operator<<(Emitter &m, ELEMENT const &l) -> Emitter & {
  return m << tunitas::octets::to_hexidecimal(tunitas::integer::to_octets<std::endian::big>(underlying(l)));
}
#endiv
