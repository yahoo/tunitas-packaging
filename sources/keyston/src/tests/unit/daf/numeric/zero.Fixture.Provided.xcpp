!// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#include <hpp/tests.unit.daf.numeric.zero.Fixture>
#endiv
#divert <hpp>
#import tests.unit.daf.numeric.Palette
namespace tests::unit::daf::numeric::zero {
  struct Fixture::Provided : public Palette {
    using El = ::tunitas::keyston::field::Element<64>;
    struct Disassembly {
      inline static constexpr auto const ZERO = Specimen{};
    };
    struct Computation {
      inline static constexpr auto const ZERO = ::tunitas::keyston::daf::Input<SHARE>::Count{El{0u}};
      inline static constexpr auto const CANARY = ::tunitas::keyston::daf::Input<SHARE>::Count{El{1u}};
    };
    struct Amalgamation {
      inline static constexpr auto const ZERO = ::tunitas::keyston::daf::Output<SHARE>::Count{El{0u}};
      inline static constexpr auto const CANARY = ::tunitas::keyston::daf::Output<SHARE>::Count{El{1u}};
    };
    struct Reassembly {
      inline static constexpr auto const ZERO = ::tunitas::keyston::daf::Output<SHARE>::Count{El{0u}};
    };
  };
}
#endiv
