// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.prio.disassembly.Slicer
namespace tests::unit::prio::disassembly::required {
  //
  // Is this type an instance of prio::package_disassembly::body::Slicer?
  // We can't use InstanceOf here because that concept does not handle NTTP (Non-Type Template Parameters)
  //
  template<typename SLICER> concept Slicer = requires(SLICER) {
    { []<Size SHARDS, Size STRIDE>(library::Slicer<SHARDS, STRIDE> *)
      {}(static_cast<SLICER *>(nullptr)) };
  };
}
#endiv
