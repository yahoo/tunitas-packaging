// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.hale.hpke.key.bundle.required.Bundleable
namespace tunitas::hale::hpke::key::bundle {
  //
  // A bundle for the keys
  //
  // Specification:
  //
  //   RFC 9180
  //   https://www.ietf.org/rfc/rfc9180.html
  //
  // Design:
  //
  //   Specializations only.
  //
  // Usage:
  //
  //   Construct one, and consider it!
  //
  //   Bundle<Key<PUBLIC>>
  //   Bundle<Key<SECRET>>
  //   Bundle<Key<SECRET>, Key<PUBLIC>>
  //   Bundle<Key<PUBLIC>, Key<SECRET>>
  //
  template<typename... KEYS> requires required::Bundleable<KEYS...> struct Bundle;
}
#endiv
#divert <cpp>
#forward tunitas.hale.hpke.Key
namespace {
  namespace testate {
    using tunitas::hale::hpke::key::bundle::Bundle;
    using tunitas::hale::hpke::Key;
    using enum tunitas::hale::hpke::Side;
    static_assert(sizeof (Bundle<Key<PUBLIC>> *));
    static_assert(sizeof (Bundle<Key<SECRET>> *));
    static_assert(sizeof (Bundle<Key<PUBLIC>, Key<SECRET>> *));
    static_assert(sizeof (Bundle<Key<SECRET>, Key<PUBLIC>> *));
  }
}
#endiv
