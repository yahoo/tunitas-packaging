// This is -*- c++ -*- nearly D++23 with Modules TS but in the S.D.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.field.required.Field
namespace tunitas::keyston::field::polynomial {
  //
  // The definition of a (fixed) polynomial in the field
  //
  // Specification:
  //
  //   https://www.ietf.org/archive/id/draft-irtf-cfrg-vdaf-05.html#name-finite-fields
  //   Section 6.1 Finite Fields
  //
  // Design:
  //
  //   Lol. Whut?
  //
  // Usage:
  //
  //   Of course, you silly goose!
  //
  template<required::Field, Size DEGREE> struct Definition;
}
#endiv
#divert <hpp>
#import tunitas.keyston.field.polynomial.Fixed
#import tunitas.keyston.field.traits.Field
namespace tunitas::keyston::field {
  template<required::Field FIELD, Size THE_DEGREE> struct polynomial::Definition {
    using Field = FIELD;
    inline static constexpr auto const DEGREE = THE_DEGREE;
    using Element = typename traits::Field<Field>::Element;
    using Polynomial = polynomial::Fixed<Element, DEGREE>;
    using Type = Polynomial;
    using Value [[deprecated("instead prefer Definition<...>::Type")]] = Type;
    //
    inline static constexpr auto zeros() -> Value { return {}; }
  };
}
#endiv
