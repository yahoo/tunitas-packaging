// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.prio.flp.gadget.recorder.required.Element
namespace tunitas::keyston::prio::flp::gadget::recorder::required {
  //
  // Is this type suitable for the LOG parameter to Recorder<ELEMENT, LOG, ARITY>?
  //
  template<typename LOGGABLE, typename ELEMENT> concept Loggable = same_as<void, LOGGABLE> || (Element<ELEMENT> && same_as<ELEMENT, LOGGABLE>);
}
#endiv
#divert <cpp>
#import tunitas.keyston.Field
namespace {
  namespace testate {
    namespace required = tunitas::keyston::prio::flp::gadget::recorder::required;
    using Element = tunitas::keyston::Field<64>::Element;
    static_assert(required::Loggable<Element, Element>);
    static_assert(required::Loggable<void, Element>);
  }
}
#endiv
