// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.Tuple
#import tunitas.keyston.Shards
#import tunitas.keyston.daf.Input
#import tunitas.keyston.daf.Public
#include <hpp/tunitas.keyston.daf.Input> // .... whereas tunitas::Tuple<...> requires the complete types of its arguments
#include <hpp/tunitas.keyston.daf.Public> // ... eadem ratione
namespace tunitas::keyston::daf::disassembled {
  //
  // The ancestor of the tuple of the disassembly.
  //
  // Specification:
  // 
  //   See Disassembly
  //
  // Design:
  //
  //   AVOID.  This is an implementation detail.
  //   Instead use Disassembly.
  //
  //   This type alias is a convenient implementation detail for the specializations of std::tuple_size and std::tuple_alternative.
  //
  // Usage:
  //
  //   No.
  //
  using Tuple = tunitas::Tuple<Public<SHARE>, Shards<Input<SHARE>>>;
}
#endiv
