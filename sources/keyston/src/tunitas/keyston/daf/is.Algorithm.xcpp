// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#import tunitas.keyston.Scheme
#import tunitas.keyston.daf.Name
namespace tunitas::keyston::daf::is {
  //
  // Are the SCHEME and NAME valid combinations?
  //
  template<Scheme, Name> struct Algorithm;
  template<> struct Algorithm<Scheme::ADHOC, Name::ZERO>;
  template<> struct Algorithm<Scheme::ADHOC, Name::CONSTANT>;
  template<> struct Algorithm<Scheme::PRIO, Name::COUNT>;
  template<> struct Algorithm<Scheme::PRIO, Name::SUM>;
  template<> struct Algorithm<Scheme::PRIO, Name::HISTOGRAM>;
  template<> struct Algorithm<Scheme::POPLAR, Name::POPULARITY>;
}
#endiv
#divert <hpp>
#import std.true_type
#import std.false_type
namespace tunitas::keyston::daf {
  template<Scheme, Name> struct is::Algorithm : public std::false_type { };
  namespace is {
    template<> struct Algorithm<Scheme::ADHOC, Name::ZERO>        : public std::true_type { };
    template<> struct Algorithm<Scheme::ADHOC, Name::CONSTANT>    : public std::true_type { };
    template<> struct Algorithm<Scheme::PRIO, Name::COUNT>        : public std::true_type { };
    template<> struct Algorithm<Scheme::PRIO, Name::SUM>          : public std::true_type { };
    template<> struct Algorithm<Scheme::PRIO, Name::HISTOGRAM>    : public std::true_type { };
    template<> struct Algorithm<Scheme::POPLAR, Name::POPULARITY> : public std::true_type { };
  }
}
#endiv
