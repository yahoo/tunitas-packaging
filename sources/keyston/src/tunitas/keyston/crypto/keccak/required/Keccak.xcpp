// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.crypto.keccak.Keccak
namespace tunitas::keyston::crypto::keccak::required {
  //
  // The shape of all the KECCAK[c] functions is all the same.
  // This MUST be diagnostable WITHOUT the complete type of KECCAK.
  // This is the moral equivalent of InstanceOf which accounts for the NTTP (Non-Template Type Parameters)
  //
  template<typename KECCAK> concept Keccak = requires(KECCAK) {
    { []<auto WIDTH, auto VALUE, auto MASK>(crypto::keccak::Keccak<WIDTH, VALUE, MASK> *)
      requires (convertible_to<decltype(WIDTH), Size> && convertible_to<decltype(VALUE), uint8_t> && convertible_to<decltype(MASK), uint8_t>)
      {}(static_cast<KECCAK *>(nullptr)) };
  };
}
#endiv
