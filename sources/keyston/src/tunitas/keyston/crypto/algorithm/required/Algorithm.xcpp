// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
#forward tunitas.keyston.crypto.algorithm.Algorithm
namespace tunitas::keyston::crypto::algorithm::required {
  //
  // The shape of the Algorithm specializations.
  // This MUST be diagnostable WITHOUT the complete type of ALGORITHM.
  // This is the moral equivalent of InstanceOf which accounts for the NTTP (Non-Template Type Parameters)
  //
  template<typename ALGORITHM> concept Algorithm = requires(ALGORITHM) {
    { []<auto TAG>(algorithm::Algorithm<TAG> *) requires convertible_to<decltype(TAG), Name>
      {}(static_cast<ALGORITHM *>(nullptr)) };
  };
}
#endiv
