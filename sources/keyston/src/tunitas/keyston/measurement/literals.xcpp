// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-keyston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/keyston/tree/LICENSE
#divert <fpp>
namespace tunitas::keyston::measurement {
  namespace literals { }
}
#endiv
#divert <hpp>
#import tunitas.keyston.measurement.Specimen
namespace tunitas::keyston::measurement::literals {
  inline constexpr auto operator""_specimen(int unsigned long long value) -> Specimen;
}
#endiv
#divert <ipp>
#import tunitas.keyston.measurement.Limits.Specimen
#import tunitas.keyston.exception.Range
namespace tunitas::keyston::measurement {
  constexpr auto literals::operator""_specimen(int unsigned long long value) -> Specimen {
    if (value < Limits<Specimen>::min() || Limits<Specimen>::max() < value) {
      throw exception::Range{"specimen out of range"};
    } else {
      return Specimen(value);
    }
  }
}
#endiv
