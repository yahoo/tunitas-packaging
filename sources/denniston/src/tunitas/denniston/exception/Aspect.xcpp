// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
namespace tunitas::denniston::exception {
  //
  // The aspect of being a Tunitas Denniston exception
  //
  // Specification:
  //
  //   You Know.
  //   Is abstract.
  //
  // Design:
  //
  //   Descendants only.
  //
  // Usage:
  //
  //   By mixin, typically with complete::Blended or the moral equivalent thereof.
  //
  struct Aspect;
}
#endiv
#divert <hpp>
class tunitas::denniston::exception::Aspect {
protected:
  virtual ~Aspect() = default;
public:
  struct Results {
    using What = char const *;
  };
  virtual auto what() const noexcept -> Results::What = 0;
};
#endiv
