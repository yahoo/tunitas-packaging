// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
#import nonstd.required.iterator.Forward
namespace tunitas::denniston::process::companion::required::iterator {
  //
  // Is this TYPE an iterator that can produce (pointers to) companion subprocess (prototype)?
  // The remaining conditions are deferred until usage::iterator::Subprocess<ITERATOR> when the complete types are available.
  //
  template<typename ITERATOR> concept Subprocess = requires(ITERATOR) {
    requires Forward<ITERATOR>;
  };
}
#endiv
