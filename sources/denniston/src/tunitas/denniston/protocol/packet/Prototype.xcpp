// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2022.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-denniston/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/services/denniston/tree/LICENSE
#divert <fpp>
namespace tunitas::denniston::protocol::packet {
  //
  // The (prototype of a) message (a packet).
  //
  // Specification:
  //
  //   Stores some manifest information.
  //   Expects to be dynamically allocated with std::make_unique<DESCENDANT>(...)
  //
  // Design:
  //
  //   Descendants only.
  //   The destructor must be public so that std::unique_ptr can see it.
  //
  // Usage:
  //
  //   On the network.
  //
  struct Prototype;
}
#endiv
#divert <hpp>
struct tunitas::denniston::protocol::packet::Prototype {
  Prototype(Prototype const &) = delete;
  Prototype &operator=(Prototype const &) = delete;
  virtual ~Prototype() = default;
protected:
  inline explicit Prototype() = default;
};
#endiv
